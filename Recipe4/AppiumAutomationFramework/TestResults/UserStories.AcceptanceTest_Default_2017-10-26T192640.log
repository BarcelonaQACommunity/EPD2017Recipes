VS filter: testpath:TestAssembly:UserStories.AcceptanceTest/Feature:Main+view+-+How+to+manage+the+different+lists/Scenario:Main+View+-+With+an+empty+view+the+user+can+see+a+phrase | testpath:TestAssembly:UserStories.AcceptanceTest/Feature:Main+view+-+How+to+manage+the+different+lists/Scenario:Main+View+-+When+the+user+creates+three+tasks+and+the+main+view+have+three+tasks | testpath:TestAssembly:UserStories.AcceptanceTest/Feature:Main+view+-+How+to+manage+the+different+lists/Scenario:Main+View+-+The+user+removes+a+task+and+check+that+the+task+has+been+removed | testpath:TestAssembly:UserStories.AcceptanceTest/Feature:Main+view+-+How+to+manage+the+different+lists/Scenario:Main+View+-+When+the+user+creates+a+task+the+main+view+have+one+task
Discovering target: Default
Discovering tests from assembly: C:\QACommunity\ErniPerformance2017\AppiumAutomationFramework\UserStories.AcceptanceTest\bin\Debug\UserStories.AcceptanceTest.dll
Appdomain Disposed
Test Suite Dump
#0: UserStories.AcceptanceTest/Default - 
#1: Default - 
#2: UserStories.AcceptanceTest - 
#9: Main view - How to manage the different lists - 
#10: Main View - With an empty view the user can see a phrase - TestAssembly:UserStories.AcceptanceTest/Feature:Main+view+-+How+to+manage+the+different+lists/Scenario:Main+View+-+With+an+empty+view+the+user+can+see+a+phrase
#11: Main View - When the user creates a task the main view have one task - TestAssembly:UserStories.AcceptanceTest/Feature:Main+view+-+How+to+manage+the+different+lists/Scenario:Main+View+-+When+the+user+creates+a+task+the+main+view+have+one+task
#12: Main View - When the user creates three tasks and the main view have three tasks - TestAssembly:UserStories.AcceptanceTest/Feature:Main+view+-+How+to+manage+the+different+lists/Scenario:Main+View+-+When+the+user+creates+three+tasks+and+the+main+view+have+three+tasks
#13: Main View - The user removes a task and check that the task has been removed - TestAssembly:UserStories.AcceptanceTest/Feature:Main+view+-+How+to+manage+the+different+lists/Scenario:Main+View+-+The+user+removes+a+task+and+check+that+the+task+has+been+removed
End: Test Suite Dump
Thread#0:Scheduler: get next test for thread
Thread#:Scheduler: testitem #10 from normal test queue 
Thread#0:Scheduler: considering testitem #10 for thread
Thread#0:Scheduler: using testitem #10 for thread
Thread#0:Scheduler: Test #10 is scheduled for thread
Thread#0:Scheduler: with testItemExecutionIndex 0
Thread #0: creating new test thread executor for UserStories.AcceptanceTest, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null (target: Default)
Loading SpecRun type 'TechTalk.SpecRun.Framework.TestAssemblyExecutor' from: C:\Users\lodi\AppData\Local\Temp\VisualStudioTestExplorerExtensions\SpecRun.Runner.1.5.2\tools\TechTalk.SpecRun.Framework.Executor.dll
Thread#0: Test #10/0 is started on thread #0
Thread#0:B:Given The application does not have any tasks
Thread#0:T:done: MainViewSteps.TheApplicationDoesNotHaveAnyTasks() (7,2s)
Thread#0:B:Then The user sees a proverb
Thread#0:T:done: MainViewSteps.TheUserSeesAProverb() (0,1s)
Thread#0:Scheduler: get next test for thread
Thread#:Scheduler: testitem #11 from normal test queue 
Thread#0:Scheduler: considering testitem #11 for thread
Thread#0:Scheduler: using testitem #11 for thread
Thread#0:Scheduler: Test #11 is scheduled for thread
Thread#0:Scheduler: with testItemExecutionIndex 0
Thread#0: Test #10/0 is finished on thread #0 as Succeeded within 7,836487 seconds
Thread#0: Test #11/0 is started on thread #0
Thread#0:B:Given The application does not have any tasks
Thread#0:T:done: MainViewSteps.TheApplicationDoesNotHaveAnyTasks() (4,3s)
Thread#0:B:When The user goes to the add task view
Thread#0:T:done: MainViewSteps.TheUserGoesToTheAddTaskView() (0,4s)
Thread#0:B:And The user sets the task with the title 'Go to shop', the content 'Buy eggs and onions', and the color 'Red'
Thread#0:T:done: AddTaskViewSteps.TheUserSetsTheTaskWithTheTitleTheContentAndTheColor("Go to shop", "Buy eggs and onions", "Red") (0,6s)
Thread#0:B:And The user creates the task
Thread#0:T:done: AddTaskViewSteps.TheUserCreatesTheTask() (0,6s)
Thread#0:B:Then The application has '1' task created
Thread#0:T:done: MainViewSteps.TheApplicationHaveTaskCreated(1) (0,0s)
Thread#0:Scheduler: get next test for thread
Thread#:Scheduler: testitem #12 from normal test queue 
Thread#0:Scheduler: considering testitem #12 for thread
Thread#0:Scheduler: using testitem #12 for thread
Thread#0:Scheduler: Test #12 is scheduled for thread
Thread#0:Scheduler: with testItemExecutionIndex 0
Thread#0: Test #11/0 is finished on thread #0 as Succeeded within 6,1726633 seconds
Thread#0: Test #12/0 is started on thread #0
Thread#0:B:Given The user creates a task with the title 'Prepare meetup', the content 'Check all the content', and the color 'White'
Thread#0:B:When The user goes to the add task view
Thread#0:T:done: MainViewSteps.TheUserGoesToTheAddTaskView() (0.4s)
Thread#0:B:When The user sets the task with the title 'Prepare meetup', the content 'Check all the content', and the color 'White'
Thread#0:T:done: AddTaskViewSteps.TheUserSetsTheTaskWithTheTitleTheContentAndTheColor("Prepare meetup", "Check all the con...", "White") (0.6s)
Thread#0:B:When The user creates the task
Thread#0:T:done: AddTaskViewSteps.TheUserCreatesTheTask() (0.5s)
Thread#0:T:done: AddTaskViewSteps.TheUserCreatesATaskWithTheTitleTheContentAndTheColor("Prepare meetup", "Check all the con...", "White") (5,8s)
Thread#0:B:And The user creates a task with the title 'Buy pizzas', the content 'Call and buy pizzas', and the color 'White'
Thread#0:B:When The user goes to the add task view
Thread#0:T:done: MainViewSteps.TheUserGoesToTheAddTaskView() (0.3s)
Thread#0:B:When The user sets the task with the title 'Buy pizzas', the content 'Call and buy pizzas', and the color 'White'
Thread#0:T:done: AddTaskViewSteps.TheUserSetsTheTaskWithTheTitleTheContentAndTheColor("Buy pizzas", "Call and buy pizzas", "White") (0.5s)
Thread#0:B:When The user creates the task
Thread#0:T:done: AddTaskViewSteps.TheUserCreatesTheTask() (0.5s)
Thread#0:T:done: AddTaskViewSteps.TheUserCreatesATaskWithTheTitleTheContentAndTheColor("Buy pizzas", "Call and buy pizzas", "White") (1,3s)
Thread#0:B:And The user creates a task with the title 'Feedback', the content 'Ask for feedback', and the color 'Yellow'
Thread#0:B:When The user goes to the add task view
Thread#0:T:done: MainViewSteps.TheUserGoesToTheAddTaskView() (0.3s)
Thread#0:B:When The user sets the task with the title 'Feedback', the content 'Ask for feedback', and the color 'Yellow'
Thread#0:T:done: AddTaskViewSteps.TheUserSetsTheTaskWithTheTitleTheContentAndTheColor("Feedback", "Ask for feedback", "Yellow") (0.4s)
Thread#0:B:When The user creates the task
Thread#0:T:done: AddTaskViewSteps.TheUserCreatesTheTask() (0.5s)
Thread#0:T:done: AddTaskViewSteps.TheUserCreatesATaskWithTheTitleTheContentAndTheColor("Feedback", "Ask for feedback", "Yellow") (1,2s)
Thread#0:B:Then The application has '3' task created
Thread#0:T:done: MainViewSteps.TheApplicationHaveTaskCreated(3) (0,0s)
Thread#0:Scheduler: get next test for thread
Thread#:Scheduler: testitem #13 from normal test queue 
Thread#0:Scheduler: considering testitem #13 for thread
Thread#0:Scheduler: using testitem #13 for thread
Thread#0:Scheduler: Test #13 is scheduled for thread
Thread#0:Scheduler: with testItemExecutionIndex 0
Thread#0: Test #12/0 is finished on thread #0 as Succeeded within 8,568747 seconds
Thread#0: Test #13/0 is started on thread #0
Thread#0:B:Given The user creates a task with the title 'Prepare meetup', the content 'Check all the content', and the color 'Red'
Thread#0:B:When The user goes to the add task view
Thread#0:T:done: MainViewSteps.TheUserGoesToTheAddTaskView() (0.4s)
Thread#0:B:When The user sets the task with the title 'Prepare meetup', the content 'Check all the content', and the color 'Red'
Thread#0:T:done: AddTaskViewSteps.TheUserSetsTheTaskWithTheTitleTheContentAndTheColor("Prepare meetup", "Check all the con...", "Red") (0.5s)
Thread#0:B:When The user creates the task
Thread#0:T:done: AddTaskViewSteps.TheUserCreatesTheTask() (0.5s)
Thread#0:T:done: AddTaskViewSteps.TheUserCreatesATaskWithTheTitleTheContentAndTheColor("Prepare meetup", "Check all the con...", "Red") (5,7s)
Thread#0:B:And The user creates a task with the title 'Buy pizzas', the content 'Call and buy pizzas', and the color 'White'
Thread#0:B:When The user goes to the add task view
Thread#0:T:done: MainViewSteps.TheUserGoesToTheAddTaskView() (0.3s)
Thread#0:B:When The user sets the task with the title 'Buy pizzas', the content 'Call and buy pizzas', and the color 'White'
Thread#0:T:done: AddTaskViewSteps.TheUserSetsTheTaskWithTheTitleTheContentAndTheColor("Buy pizzas", "Call and buy pizzas", "White") (0.5s)
Thread#0:B:When The user creates the task
Thread#0:T:done: AddTaskViewSteps.TheUserCreatesTheTask() (0.5s)
Thread#0:T:done: AddTaskViewSteps.TheUserCreatesATaskWithTheTitleTheContentAndTheColor("Buy pizzas", "Call and buy pizzas", "White") (1,3s)
Thread#0:B:And The user creates a task with the title 'Feedback', the content 'Ask for feedback', and the color 'Blue'
Thread#0:B:When The user goes to the add task view
Thread#0:T:done: MainViewSteps.TheUserGoesToTheAddTaskView() (0.3s)
Thread#0:B:When The user sets the task with the title 'Feedback', the content 'Ask for feedback', and the color 'Blue'
Thread#0:T:done: AddTaskViewSteps.TheUserSetsTheTaskWithTheTitleTheContentAndTheColor("Feedback", "Ask for feedback", "Blue") (0.4s)
Thread#0:B:When The user creates the task
Thread#0:T:done: AddTaskViewSteps.TheUserCreatesTheTask() (0.5s)
Thread#0:T:done: AddTaskViewSteps.TheUserCreatesATaskWithTheTitleTheContentAndTheColor("Feedback", "Ask for feedback", "Blue") (1,2s)
Thread#0:B:When The user removes the task '2'
Thread#0:T:done: EditTaskViewSteps.TheUserRemovesTheTask("2") (0,3s)
Thread#0:B:Then The application has '2' task created
Thread#0:T:done: MainViewSteps.TheApplicationHaveTaskCreated(2) (0,0s)
Thread#0:Scheduler: get next test for thread
Thread#:Scheduler: at the end of normal test queue
Thread#0:Scheduler: enumerator for thread is at end
Thread#0:Scheduler: No more tests for thread 
Thread#0: Test #13/0 is finished on thread #0 as Succeeded within 8,7679306 seconds
Appdomain Disposed
Thread#-1:Scheduler: get next test for thread
Thread#:Scheduler: at the end of normal test queue
Thread#-1:Scheduler: enumerator for thread is at end
Total: 4
Succeeded: 4
Ignored: 0
Pending: 0
Skipped: 0
Failed: 0
